resources:
- repo: self

name: $(major).$(minor)$(Rev:.r)

stages:
- stage:
  displayName: Version
  condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
  jobs:
  - job: Version
    variables:
       prpatch: $[counter(variables['system.pullrequest.pullrequestid'], 0)]
       brpatch: $[counter(variables['build.sourcebranchname'], 0)]
    steps:
      - bash: |
           echo "##vso[build.updatebuildnumber]$(major).$(minor)-PullRequest.$(prpatch)"
        condition: eq(variables['Build.Reason'], 'PullRequest')
        name: SetPRBuildName
      - bash: |
           echo "##vso[build.updatebuildnumber]$(major).$(minor)-$(Build.SourceBranchName).$(brpatch)"
        condition: ne(variables['Build.Reason'], 'PullRequest')
        name: SetBranchBuildNam
- stage: BuildAndTest
  displayName: 'Build & Test'
  jobs:
  - job: ApiService
    displayName: ApiService
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        workingDirectory: $(System.DefaultWorkingDirectory)
        configuration: $(buildConfiguration)
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: 'test'
        workingDirectory: $(System.DefaultWorkingDirectory)
        arguments: '--collect "Code coverage"'
    - task: PublishTestResults@2
      displayName: Publish .NET Core test results and coverage
      condition: succeededOrFailed()
      inputs:
        testRunner: VSTest
        testResultsFiles: '**/*.trx'
